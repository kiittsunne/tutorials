[{"/Users/kit/Code/tutorials/react-quiz/src/index.tsx":"1","/Users/kit/Code/tutorials/react-quiz/src/reportWebVitals.ts":"2","/Users/kit/Code/tutorials/react-quiz/src/App.tsx":"3","/Users/kit/Code/tutorials/react-quiz/src/components/Header.tsx":"4","/Users/kit/Code/tutorials/react-quiz/src/components/Card.tsx":"5","/Users/kit/Code/tutorials/react-quiz/src/API.ts":"6","/Users/kit/Code/tutorials/react-quiz/src/utils.ts":"7","/Users/kit/Code/tutorials/react-quiz/src/App.style.ts":"8","/Users/kit/Code/tutorials/react-quiz/src/components/Card.styles.ts":"9"},{"size":554,"mtime":1664093044682,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1664093044682,"results":"12","hashOfConfig":"11"},{"size":3069,"mtime":1664186517680,"results":"13","hashOfConfig":"11"},{"size":219,"mtime":1664186486779,"results":"14","hashOfConfig":"11"},{"size":1189,"mtime":1664187907554,"results":"15","hashOfConfig":"11"},{"size":791,"mtime":1664183998405,"results":"16","hashOfConfig":"11"},{"size":92,"mtime":1664183904433,"results":"17","hashOfConfig":"11"},{"size":1404,"mtime":1664187481646,"results":"18","hashOfConfig":"11"},{"size":1081,"mtime":1664188013911,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nzf6br",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kit/Code/tutorials/react-quiz/src/index.tsx",[],[],"/Users/kit/Code/tutorials/react-quiz/src/reportWebVitals.ts",[],[],"/Users/kit/Code/tutorials/react-quiz/src/App.tsx",["49"],[],"import React, { MouseEvent, useState } from \"react\";\nimport { fetchQuizQuestions, Question } from \"./API\";\n// Components\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\n// Types\nimport { Difficulty, QuestionState } from \"./API\";\n// Styles\nimport { GlobalStyle, Wrapper } from \"./App.style\";\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const startNewQuiz = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n\n    setQuestions(startNewQuiz);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      // get user answers\n      const answer = e.currentTarget.value;\n\n      // check answer against correct answer\n      const correct = questions[number].correct_answer === answer;\n\n      // add score if answer is correct\n      if (correct) setScore((prev) => prev + 1);\n\n      // save answer in arr for user answers\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n\n      <Wrapper>\n        <Header title=\"Trivia Quiz\" />\n        {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\n          <button className=\"start\" onClick={startQuiz}>\n            Start Quiz\n          </button>\n        )}\n        {!gameOver && (\n          <p className=\"score\">\n            Score: {score}/{TOTAL_QUESTIONS}\n          </p>\n        )}\n        {loading && <p>Loading Quiz</p>}\n        {!loading && !gameOver && (\n          <Card\n            questionNum={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver &&\n          !loading &&\n          userAnswers.length === number + 1 &&\n          number !== TOTAL_QUESTIONS - 1 && (\n            <button className=\"next\" onClick={nextQuestion}>\n              Next Question\n            </button>\n          )}\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n",[],"/Users/kit/Code/tutorials/react-quiz/src/components/Header.tsx",[],[],"/Users/kit/Code/tutorials/react-quiz/src/components/Card.tsx",[],[],"/Users/kit/Code/tutorials/react-quiz/src/API.ts",[],[],"/Users/kit/Code/tutorials/react-quiz/src/utils.ts",[],[],"/Users/kit/Code/tutorials/react-quiz/src/App.style.ts",[],[],"/Users/kit/Code/tutorials/react-quiz/src/components/Card.styles.ts",[],[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":30,"nodeType":"52","messageId":"53","endLine":2,"endColumn":38},"@typescript-eslint/no-unused-vars","'Question' is defined but never used.","Identifier","unusedVar"]