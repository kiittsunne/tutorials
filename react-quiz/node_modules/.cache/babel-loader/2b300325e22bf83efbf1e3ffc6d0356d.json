{"ast":null,"code":"var _jsxFileName = \"/Users/kit/Code/tutorials/react-quiz/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { fetchQuizQuestions } from \"./API\"; // Components\n\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\"; // Types\n\nimport { Difficulty } from \"./API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const startNewQuiz = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(startNewQuiz);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Trivia Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), (gameOver || userAnswers.length === TOTAL_QUESTIONS) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(Card, {\n      questionNum: number + 1,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answers,\n      userAnswer: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, questions[number].question, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","Header","Card","Difficulty","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startQuiz","startNewQuiz","EASY","checkAnswer","e","nextQuestion","length","question","answers","undefined"],"sources":["/Users/kit/Code/tutorials/react-quiz/src/App.tsx"],"sourcesContent":["import React, { MouseEvent, useState } from \"react\";\nimport \"./App.css\";\nimport { fetchQuizQuestions, Question } from \"./API\";\n// Components\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\n// Types\nimport { Difficulty, QuestionState } from \"./API\";\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const startNewQuiz = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n\n    setQuestions(startNewQuiz);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {};\n\n  return (\n    <div className=\"App\">\n      <Header title=\"Trivia Quiz\" />\n      {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\n        <button className=\"start\" onClick={startQuiz}>\n          Start Quiz\n        </button>\n      )}\n      {!gameOver && <p className=\"score\">Score: </p>}\n      {loading && <p>Loading Quiz</p>}\n      {!loading && !gameOver && (\n        <Card\n          key={questions[number].question}\n          questionNum={number + 1}\n          totalQuestions={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers ? userAnswers[number] : undefined}\n          callback={checkAnswer}\n        />\n      )}\n      {!gameOver &&\n        !loading &&\n        userAnswers.length === number + 1 &&\n        number !== TOTAL_QUESTIONS - 1 && (\n          <button className=\"next\" onClick={nextQuestion}>\n            Next Question\n          </button>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,SAASC,kBAAT,QAA6C,OAA7C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,SAASC,UAAT,QAA0C,OAA1C;;AASA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAkB,EAAlB,CAA1C;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAiB,EAAjB,CAA9C;EACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMmB,SAAS,GAAG,YAAY;IAC5BX,UAAU,CAAC,IAAD,CAAV;IACAU,WAAW,CAAC,KAAD,CAAX;IAEA,MAAME,YAAY,GAAG,MAAMnB,kBAAkB,CAC3CI,eAD2C,EAE3CD,UAAU,CAACiB,IAFgC,CAA7C;IAKAX,YAAY,CAACU,YAAD,CAAZ;IACAJ,QAAQ,CAAC,CAAD,CAAR;IACAF,cAAc,CAAC,EAAD,CAAd;IACAF,SAAS,CAAC,CAAD,CAAT;IACAJ,UAAU,CAAC,KAAD,CAAV;EACD,CAdD;;EAgBA,MAAMc,WAAW,GAAIC,CAAD,IAAsC,CAAE,CAA5D;;EAEA,MAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC;IAAd;MAAA;MAAA;MAAA;IAAA,QADF,EAEG,CAACP,QAAQ,IAAIJ,WAAW,CAACY,MAAZ,KAAuBpB,eAApC,kBACC;MAAQ,SAAS,EAAC,OAAlB;MAA0B,OAAO,EAAEc,SAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAOG,CAACF,QAAD,iBAAa;MAAG,SAAS,EAAC,OAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPhB,EAQGV,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARd,EASG,CAACA,OAAD,IAAY,CAACU,QAAb,iBACC,QAAC,IAAD;MAEE,WAAW,EAAEN,MAAM,GAAG,CAFxB;MAGE,cAAc,EAAEN,eAHlB;MAIE,QAAQ,EAAEI,SAAS,CAACE,MAAD,CAAT,CAAkBe,QAJ9B;MAKE,OAAO,EAAEjB,SAAS,CAACE,MAAD,CAAT,CAAkBgB,OAL7B;MAME,UAAU,EAAEd,WAAW,GAAGA,WAAW,CAACF,MAAD,CAAd,GAAyBiB,SANlD;MAOE,QAAQ,EAAEN;IAPZ,GACOb,SAAS,CAACE,MAAD,CAAT,CAAkBe,QADzB;MAAA;MAAA;MAAA;IAAA,QAVJ,EAoBG,CAACT,QAAD,IACC,CAACV,OADF,IAECM,WAAW,CAACY,MAAZ,KAAuBd,MAAM,GAAG,CAFjC,IAGCA,MAAM,KAAKN,eAAe,GAAG,CAH9B,iBAIG;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAEmB,YAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD;;GA3DQlB,G;;KAAAA,G;AA6DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}