{"ast":null,"code":"var _jsxFileName = \"/Users/kit/Code/tutorials/react-quiz/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { fetchQuizQuestions } from \"./API\"; // Components\n\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\"; // Types\n\nimport { Difficulty } from \"./API\"; // Styles\n\nimport { GlobalStyle, Wrapper } from \"./App.style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const startNewQuiz = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(startNewQuiz);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      // get user answers\n      const answer = e.currentTarget.value; // check answer against correct answer\n\n      const correct = questions[number].correct_answer === answer; // add score if answer is correct\n\n      if (correct) setScore(prev => prev + 1); // save answer in arr for user answers\n\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Trivia Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), (gameOver || userAnswers.length === TOTAL_QUESTIONS) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: startQuiz,\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score, \"/\", TOTAL_QUESTIONS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(Card, {\n        questionNum: number + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[number].question,\n        answers: questions[number].answers,\n        userAnswer: userAnswers ? userAnswers[number] : undefined,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","Header","Card","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startQuiz","startNewQuiz","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","length","answers","undefined"],"sources":["/Users/kit/Code/tutorials/react-quiz/src/App.tsx"],"sourcesContent":["import React, { MouseEvent, useState } from \"react\";\nimport { fetchQuizQuestions, Question } from \"./API\";\n// Components\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\n// Types\nimport { Difficulty, QuestionState } from \"./API\";\n// Styles\nimport { GlobalStyle, Wrapper } from \"./App.style\";\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startQuiz = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const startNewQuiz = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n\n    setQuestions(startNewQuiz);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      // get user answers\n      const answer = e.currentTarget.value;\n\n      // check answer against correct answer\n      const correct = questions[number].correct_answer === answer;\n\n      // add score if answer is correct\n      if (correct) setScore((prev) => prev + 1);\n\n      // save answer in arr for user answers\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n\n      <Wrapper>\n        <Header title=\"Trivia Quiz\" />\n        {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\n          <button className=\"start\" onClick={startQuiz}>\n            Start Quiz\n          </button>\n        )}\n        {!gameOver && (\n          <p className=\"score\">\n            Score: {score}/{TOTAL_QUESTIONS}\n          </p>\n        )}\n        {loading && <p>Loading Quiz</p>}\n        {!loading && !gameOver && (\n          <Card\n            questionNum={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver &&\n          !loading &&\n          userAnswers.length === number + 1 &&\n          number !== TOTAL_QUESTIONS - 1 && (\n            <button className=\"next\" onClick={nextQuestion}>\n              Next Question\n            </button>\n          )}\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}